@model AuthorViewModel

@{
	ViewData["Title"] = $"{Model.Name} - Info";
}

<h1>@Model.Name</h1>
<div class="row align-content-between">
	<div class="col-4">
		<img src="@(Model.Image ?? "/images/placeholder.svg")" alt="@Model.Name poster" style="width:60%;" />
		<h4><a href="@Model.Wikipedialink" target="_blank" class="link-info page-link me-3 text-lg-center">Wikipedia</a></h4>
	</div>
	<div class="col-8 ps-4">
		<p>Related media:</p>
		<div id="media-connections">
		</div>
	</div>
</div>


<script>
	document.addEventListener("DOMContentLoaded", async () => {
		const mediaConnections = document.getElementById("media-connections");
		const apiMediaUrl = "/api/Media";
		const connections = @Html.Raw(Json.Serialize(Model.MangaIds)); // cause otherwise doesnt work

		for (const conn of connections) {
			try {
				const response = await fetch(`${apiMediaUrl}/${conn}`);
				if (!response.ok) throw new Error("Error fetching connection info");
				const data = await response.json();
				addConnection(data.name, data.type, data.publishdate, data.poster);
			} catch (error) {
				console.error(error);
			}
		}

		function addConnection(name, type, publishDate, poster) {
			const connection = document.createElement("div");
			connection.innerHTML = `
					<img src="${poster || "/images/placeholder.svg"}" style="min-height: 5vh; max-height: 10vh;" alt="Medium poster"/>
					<p><strong>${name}</strong> (${type})</p>
				`;
			mediaConnections.appendChild(connection);
		}
	});
</script>